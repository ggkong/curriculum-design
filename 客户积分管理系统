
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<windows.h>

#define OK 1
#define ERROR 0
#define MAXNAME 30 
#define MAXS 30


struct shangpin{
	char sname[MAXNAME];
	double price;
}Shangpin[MAXS] = {
	{"薯片", 5.0},
	{"奶茶", 10.0},
	{"辣条",3.5},
	{"书包",  320.0},
	{"运动球鞋", 250.0},
	{"乒乓球拍", 20.0},
	{"保温杯", 39}
};


typedef struct user{
	int id;
	char *name;
	int jifen;
	struct user *next;
}User;

void welcome();

int usrcus();

int addcus();
int oldcus();
double sell(User *);
double findSp(char *);
double decide(int jifen);

int usrmanager();
int viewcus();
int modcus();
int delcus();


// 打印会员
void printuser(User *);

// 通过id搜索用户
User *lookup(int);


// 定义头指针
User *head = NULL;




int main()
{
	welcome();
	return 0;
}

void welcome()
{
	char ch;        // 接受选择字符
	system("cls");
    while(1){
		printf("*************************欢迎使用客户消费积分管理系统*************************\n");
        printf("请输入项目前编号执行相关操作：\n");
        printf("\n[1] 客户入口\n\n[2] 管理员入口\n\n[0] 退出\n\n");
		printf("【注】凡是在本店消费1元起， 即可成为本店会员， 享受打折优惠。1元 = 1积分， 消费越多， 优惠越大。 快来疯狂购物吧！！！\n\n");
		printf("请输入您的选择>>");
        ch = getchar();

        switch(ch){
            case '1':
				system("cls");
                while(1){
                    if(usrcus()){
                        continue;
                    }else{
                        break;
                    }
                 }
                break;
            case '2':
				system("cls");
                while(1){
                    if(usrmanager()){
                        continue;
                    }else{
                        break;
                    }
                }
                break;
            case '0':
                exit(0);
            default:
                printf("你的输入有误，请重新输入！\n");
        }
	fflush(stdin);
    }
}
int usrcus()
{
	char ch;
    printf("----------------客户界面---------------------\n");
    printf("请输入项目前编号执行相关操作：\n\n");
    printf("[1] 注册成为新会员\n[2] 我是老会员\n");
    printf("[0] 返回主页\n");
	ch = getchar();
    switch(ch){
        case '1':
            addcus();
            break;
        case '2':
            oldcus();
            break;
        case '0':
            return 0;
        default:
            printf("你的输入有误，请重新输入！\n");
            break;
    }
	fflush(stdin);
    return OK;
}
int oldcus()
{
	system("cls");
	int id, jifen;
	double discount, spend, yuanjia;
	printf("请输入您的会员编号>>");
	scanf("%d", &id);
	getchar();
	User *ur;
	if(ur = lookup(id))
	{
		jifen = ur->jifen;
		discount = decide(jifen); // 根据积分 返回的 折扣
		printf("尊敬的【%s】用户， 您好\n您的积分为【%d】，享受需付金额【%.2f】的优惠\n", ur->name, ur->jifen, discount);
		
		// 进行积分判断， 来打几折
		// 积分在 1-100间 打九五折， 在 101 - 500 打九折， 在501 - 2000 打八五折， 2000以上打七五折

		printf("积分在 1-100间 打九五折， 在 101 - 500 打九折， 在501 - 2000 打八五折， 2000以上打七五折\n");
		yuanjia = sell(ur); // 本次消费金额
		spend = yuanjia * discount; // 本次实际花费
		printf("您本次消费%.2f元， 您的积分为【%d】, 因此享受需付原价金额【%.2f】倍优惠, 所以您本次实际消费%.2f元\n", yuanjia, ur->jifen, discount, spend);
		ur->jifen += (int)spend;
	}
	else
		printf("您输入的会员编号有误！\n");
	return OK;
}


double decide(int jifen)
{
	double discount;
	if(jifen == 0)
	{
		return 1;
	}else if(jifen<=100){
		discount = 0.95;
	}else if(jifen<=500){
		discount = 0.9;
	}else if(jifen<=2000){
		discount = 0.85;
	}else{
		discount = 0.75;
	}
	return discount;
}

double sell(User *ur)
{
	int i;
	double yuanjia = 0;
	char choiceSP[MAXS];
	char choiceNY;
	printf("----------------购买商品-------------------\n");
	printf("商品名称\t\t   商品价格\n");
	printf("======================================\n");
	for(i=0; i<MAXS; i++)
	{
		if(Shangpin[i].price != 0)
		{
			printf("  %s\t\t\t%8.2f\n", Shangpin[i].sname, Shangpin[i].price);
		}else
		{
			break;	
		}
	}
	while(1)
	{
		printf("请输入您要购买的商品>>");
		scanf("%s", choiceSP);
		getchar();
		double res = findSp(choiceSP);
		if(res)
		{
			printf("价格：%f\n", res);
			yuanjia += res;
			printf("您现在消费了%f元", yuanjia);
		}
			
		else
			printf("没有您要购买的商品哦！");

		printf("是否选择继续购买(N/Y) >>");
		scanf("%s", &choiceNY);
		getchar();
		if(choiceNY == 'Y' || choiceNY == 'y') continue;
		else if(choiceNY == 'N' || choiceNY == 'n') break;
		else
		{
			printf("列表中没有您要购买的商品哦！\n");
			sell(ur);
		}	

	}

	return yuanjia;
	
	

}

double findSp(char *sname)
{
	int i;
	for(i=0; i<MAXS; i++)
	{
		if(strcmp(Shangpin[i].sname, sname) == 0)
		{
			return Shangpin[i].price;
		}
	}
	return ERROR;
}

int addcus()  
{
	system("cls");      
    char uname[MAXNAME];
    int id, jifen;
	char *namep;
    while(1){
        id = 0;
        jifen = 0;
        namep = NULL;
        printf("请输入小于1000的会员编号：\n");
        scanf("%d", &id);
		getchar();
        if(!(id > 0 && id < 1000)){
            printf("输入编号不符合要求\n");
            // fflush(stdin);
            continue;
        }
        printf("请输入用户姓名：\n");
        scanf("%s", &uname);
		namep = strdup(uname);     // 相当于strcpy
		                          // 返回一个指针,指向为复制字符串分配的空间;如果分配空间失败,则返回NULL值。
		getchar();
        User *ur;        
        if((lookup(id)) == NULL){
            ur = (User *)malloc(sizeof (User));
            if(ur == NULL || (ur->name = namep) == NULL){
                printf("注册vip失败\n");
                fflush(stdin);
                continue;
            }
            ur->id = id;
			ur->jifen = jifen;

			 // 添加
            ur->next = head;
            head = ur;

            printf("用户 %s 注册成功\n", uname);
            return OK;
        }else{
            fflush(stdin);
            printf("会员编号已经被占用\n");
			return ERROR;
        }
	}
}

User * lookup(int id){
	User *ur;
	for(ur = head; ur != NULL; ur = ur->next){
		if(id == ur->id ) {
			return ur;
		}
	}

	return NULL;
}


int usrmanager(){
	char ch;
    printf("----------------管理员用户界面---------------------\n");
    printf("请输入项目前编号执行相关操作：\n\n");
    printf("[1] 查看客户名单\n[2] 添加新客户\n[3] 修改客户信息\n[4] 注销客户信息\n");
    printf("[0] 返回主页\n");
	ch = getchar();
    switch(ch){
        case '1':
            viewcus();
            break;
        case '2':
            addcus();
            break;
        case '3':
            modcus();
            break;
        case '4':
            delcus();
            break;
        case '0':
            return 0;
        default:
        	printf("您的输入有误， 请重新输入！\n");
            break;
    }
	fflush(stdin);
    return OK;
}

int viewcus(){
	system("cls");
	User *ur = head;
	if(ur){
		for( ; ur != NULL; ur = ur->next){
			printuser(ur);
			printf("------------------------------------\n");
		}		
	}else{
		printf("还没有会员加入呢， 赶快创建一个吧！\n");
        return 0;
	}
	return OK;
	
}

void printuser(User *ur){
	printf("会员号：%d\n", ur->id);
	printf("会员姓名：%s\n", ur->name);
	printf("会员积分：%d\n", ur->jifen);
}
int modcus(){
	system("cls");
	User *ur = NULL;
	while(1){
		int id = 0;
        printf("请输入要修改信息的用户会员号：\n");
        scanf("%d", &id);
        getchar();
        if(!(id > 0 && id < 1000)){
            fflush(stdin);
            printf("会员号不符合要求");
            continue;
        }
		if((ur = lookup( id)) != NULL){
			printf("以下为要修改的用户的现有信息：\n");
            printuser(ur);
            printf("[1] 修改会员姓名\n[2] 修改会员积分\n[0] 放弃修改\n");
            while(1){
                int i;
                scanf("%d", &i);
                getchar();
                if(!(i == 1 || i == 2 || i == 3 || i == 0)){
                    fflush(stdin);
                    printf("输入项目前编号选择相关项目\n");
                    continue;
                }
                switch(i){
                    case 1:
                        while(1){
                            char newname[MAXNAME], *namep;
                            printf("会员姓名：\n");
                            scanf("%s", newname);
							namep = strdup(newname);
                            getchar();
                            if((ur->name = namep) != NULL){
                                printf("修改成功\n");
                                return id;
                            }
                        }
                        break;
                    case 2:
                        while(1){
                            int jifen;
                            printf("输入用户积分：\n");
                            scanf("%d", &jifen);
                            getchar();
                            ur->jifen = jifen;
                            printf("修改成功\n");
                            return id;
                        }
                        break;
                    case 0:
                        return 0;
                    default:
                        printf("获取参数失败\n");
                        break;   
                }
            }
		}else{

			printf("没有此会员号\n");
            return 0;
		
		}

	}
}



int delcus(){
	int id;
	system("cls");

	printf("请输入您要删除的id>> ");
	scanf("%d", &id);
	getchar();
	User *ur, *fur;
	for(fur = ur = head; ur != NULL; fur = ur, ur = ur->next){
        if(ur->id == id){
            printuser(ur);
            break;
        }
    }// 找到输出

	 if(ur != NULL){
        while(1){
            printf("确定要注销此用户：Y  N\n");
            char YN;
            scanf("%c", &YN);
            getchar();
            if(!((YN == 'Y' || YN == 'y') || (YN == 'N' || YN == 'n'))){
                fflush(stdin);
                printf("指令无效\n");
                continue;
            }
            if(YN == 'Y' || YN == 'y'){
                ur == head ? head = ur->next : (fur->next = ur->next);
                free(ur);
                ur = NULL;
                printf("用户注销成功\n");
                break;
            }else{
                printf("放弃注销\n");
                return 0;
            }
        }
    }else{
        printf("要注销的用户id不存在\n");
        return -1;
    }
	fflush(stdin);
	return OK;
}
